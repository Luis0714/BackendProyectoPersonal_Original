Ü
]C:\Users\Asus\source\repos\BackendProyectoPersonal\WebAPI\Controllers\V1\AccountController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
V1 
{ 
[ 

ApiVersion 
( 
$str 
) 
] 
public		 

class		 
AccountController		 "
:		# $
BaseApiController		% 6
{

 
[ 	
AllowAnonymous	 
] 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Autenticate) 4
(4 5$
GetUserAccessCredentials5 M
userN R
)R S
{ 	
try 
{ 
return 
Ok 
( 
await 
Mediator  (
.( )
Send) -
(- .
user. 2
)2 3
)3 4
;4 5
} 
catch 
( 
	Exception 
ex 
)  
{ 
return 

BadRequest !
(! "
ex" $
.$ %
Message% ,
), -
;- .
} 
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
[ 	
	Authorize	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetUserProfile) 7
(7 8
)8 9
{ 	
try 
{   
return!! 
Ok!! 
(!! 
await!! 
Mediator!!  (
.!!( )
Send!!) -
(!!- .
new!!. 1
GetProfileJwt!!2 ?
(!!? @
HttpContext!!@ K
)!!K L
)!!L M
)!!M N
;!!N O
}"" 
catch## 
(## 
	Exception## 
ex## 
)##  
{$$ 
return%% 

BadRequest%% !
(%%! "
ex%%" $
.%%$ %
Message%%% ,
)%%, -
;%%- .
}&& 
}'' 	
}(( 
})) Ã
]C:\Users\Asus\source\repos\BackendProyectoPersonal\WebAPI\Controllers\V1\BaseApiController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
V1 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 3
)3 4
]4 5
public 

class 
BaseApiController "
:# $
ControllerBase% 3
{		 
private

 
readonly

 
	IMediator

 "
	_mediator

# ,
;

, -
	protected 
	IMediator 
Mediator $
=>% '
	_mediator( 1
??2 4
HttpContext5 @
.@ A
RequestServicesA P
.P Q

GetServiceQ [
<[ \
	IMediator\ e
>e f
(f g
)g h
;h i
} 
} ã
ZC:\Users\Asus\source\repos\BackendProyectoPersonal\WebAPI\Controllers\V1\FileController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
V1 
{ 
[ 

ApiVersion 
( 
$str 
) 
] 
public		 

class		 
FileController		 
:		  !
BaseApiController		" 3
{

 
[ 	
AllowAnonymous	 
] 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Upload) /
(/ 0
	IFormFile0 9
file: >
)> ?
{ 	
try 
{ 
return 
Ok 
( 
await 
Mediator  (
.( )
Send) -
(- .
new. 1
UploadFileCommand2 C
(C D
)D E
{E F
FileF J
=K L
fileM Q
}Q R
)R S
)S T
;T U
} 
catch 
( 
	Exception 
ex 
)  
{ 
return 

BadRequest !
(! "
ex" $
.$ %
Message% ,
), -
;- .
} 
} 	
[ 	
AllowAnonymous	 
] 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
dowload) 0
(0 1
string1 7
ruta8 <
)< =
{ 	
try   
{!! 
var"" 
response"" 
="" 
await"" $
Mediator""% -
.""- .
Send"". 2
(""2 3
new""3 6
DownloadFile""7 C
(""C D
)""D E
{""F G
Ruta""H L
=""M N
ruta""O S
}""T U
)""U V
;""V W
return## 
File## 
(## 
response## $
.##$ %
Data##% )
.##) *
Bytes##* /
,##/ 0
response##0 8
.##8 9
Data##9 =
.##= >
ContentType##> I
,##I J
Path##J N
.##N O
GetFileName##O Z
(##Z [
ruta##[ _
)##_ `
)##` a
;##a b
}$$ 
catch%% 
(%% 
	Exception%% 
ex%% 
)%%  
{&& 
return'' 

BadRequest'' !
(''! "
ex''" $
.''$ %
Message''% ,
)'', -
;''- .
}(( 
})) 	
},, 
}-- Î*
ZC:\Users\Asus\source\repos\BackendProyectoPersonal\WebAPI\Controllers\V1\UserController.cs
	namespace		 	
WebAPI		
 
.		 
Controllers		 
.		 
V1		 
{

 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
UserController 
:  !
BaseApiController" 3
{ 
[ 	
AllowAnonymous	 
] 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create) /
(/ 0
CreateUserCommand0 A
userB F
)F G
{ 	
try 
{ 
return 
Ok 
( 
await 
Mediator  (
.( )
Send) -
(- .
user. 2
)2 3
)3 4
;4 5
} 
catch 
( 
	Exception 
ex 
)  
{ 
return 

BadRequest !
(! "
ex" $
.$ %
Message% ,
), -
;- .
} 
} 	
[ 	
	Authorize	 
( 
Policy 
= 
$str (
)( )
]) *
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public   
async   
Task   
<   
IActionResult   '
>  ' (
GetAll  ) /
(  / 0
)  0 1
{!! 	
try"" 
{## 
return$$ 
Ok$$ 
($$ 
await$$ 
Mediator$$  (
.$$( )
Send$$) -
($$- .
new$$. 1
GetAllUsers$$2 =
($$= >
)$$> ?
)$$? @
)$$@ A
;$$A B
}%% 
catch&& 
(&& 
	Exception&& 
ex&& 
)&&  
{'' 
return(( 

BadRequest(( !
(((! "
ex((" $
.(($ %
Message((% ,
)((, -
;((- .
})) 
}** 	
[++ 	
	Authorize++	 
(++ 
Policy++ 
=++ 
$str++ (
)++( )
]++) *
[,, 	
HttpGet,,	 
],, 
[-- 	
Route--	 
(-- 
$str-- 
)-- 
]-- 
public.. 
async.. 
Task.. 
<.. 
IActionResult.. '
>..' (
GetById..) 0
(..0 1
GetUserById..1 <
userId..= C
)..C D
{// 	
try00 
{11 
return22 
Ok22 
(22 
await22 
Mediator22  (
.22( )
Send22) -
(22- .
userId22. 4
)224 5
)225 6
;226 7
}33 
catch44 
(44 
	Exception44 
ex44 
)44  
{55 
return66 

BadRequest66 !
(66! "
ex66" $
.66$ %
Message66% ,
)66, -
;66- .
}77 
}88 	
[:: 	
	Authorize::	 
]:: 
[;; 	
HttpGet;;	 
];; 
[<< 	
Route<<	 
(<< 
$str<< 
)<< 
]<<  
public== 
async== 
Task== 
<== 
IActionResult== '
>==' (
ResetPassword==) 6
(==6 7 
ResetPasswordCommand==7 K
email==L Q
)==Q R
{>> 	
try?? 
{@@ 
returnAA 
OkAA 
(AA 
awaitAA 
MediatorAA  (
.AA( )
SendAA) -
(AA- .
emailAA. 3
)AA3 4
)AA4 5
;AA5 6
}BB 
catchCC 
(CC 
	ExceptionCC 
exCC 
)CC  
{DD 
returnEE 

BadRequestEE !
(EE! "
exEE" $
.EE$ %
MessageEE% ,
)EE, -
;EE- .
}FF 
}GG 	
[II 	
	AuthorizeII	 
]II 
[JJ 	
HttpPutJJ	 
]JJ 
[KK 	
RouteKK	 
(KK 
$strKK 
)KK  
]KK  !
publicLL 
asyncLL 
TaskLL 
<LL 
IActionResultLL '
>LL' (
ChangePasswordLL) 7
(LL7 8!
ChangePasswordCommandLL8 M
credencialsLLN Y
)LLY Z
{MM 	
tryNN 
{OO 
returnPP 
OkPP 
(PP 
awaitPP 
MediatorPP  (
.PP( )
SendPP) -
(PP- .
credencialsPP. 9
)PP9 :
)PP: ;
;PP; <
}QQ 
catchRR 
(RR 
	ExceptionRR 
exRR 
)RR  
{SS 
returnTT 

BadRequestTT !
(TT! "
exTT" $
.TT$ %
MessageTT% ,
)TT, -
;TT- .
}UU 
}VV 	
}WW 
}XX Á
UC:\Users\Asus\source\repos\BackendProyectoPersonal\WebAPI\Extensions\AppExtensions.cs
	namespace 	
WebAPI
 
. 

Extensions 
{ 
public 

static 
class 
AppExtensions %
{ 
public 
static 
void &
useErrorHandlingMiddleware 6
(6 7
this7 ;
IApplicationBuilder< O
appP S
)S T
{ 	
app		 
.		 
UseMiddleware		 
<		 "
ErrorHandlerMiddleware		 4
>		4 5
(		5 6
)		6 7
;		7 8
}

 	
} 
} £	
XC:\Users\Asus\source\repos\BackendProyectoPersonal\WebAPI\Extensions\ServiceExtension.cs
	namespace 	
WebAPI
 
. 

Extensions 
{ 
public 

static 
class 
ServiceExtension (
{ 
public 
static 
void &
AddApiVersioningExtensions 5
(5 6
this6 :
IServiceCollection; M
servicesN V
)V W
{ 	
services		 
.		 
AddApiVersioning		 %
(		% &
config		& ,
=>		- /
{

 
config 
. 
DefaultApiVersion (
=) *
new+ .

ApiVersion/ 9
(9 :
$num: ;
,; <
$num= >
)> ?
;? @
config 
. /
#AssumeDefaultVersionWhenUnspecified :
=; <
true= A
;A B
config 
. 
ReportApiVersions (
=) *
true+ /
;/ 0
} 
) 
; 
} 	
} 
} 
_C:\Users\Asus\source\repos\BackendProyectoPersonal\WebAPI\Middlewares\ErrorHandlerMiddleware.cs
	namespace 	
WebAPI
 
. 
Middlewares 
{ 
public		 

class		 "
ErrorHandlerMiddleware		 '
{

 
private 
readonly 
RequestDelegate (
_next) .
;. /
public "
ErrorHandlerMiddleware %
(% &
RequestDelegate& 5
next6 :
): ;
{ 	
_next 
= 
next 
; 
} 	
public 
async 
Task 
Invoke  
(  !
HttpContext! ,
context- 4
)4 5
{ 	
try 
{ 
await 
_next 
( 
context #
)# $
;$ %
} 
catch 
( 
	Exception 
error "
)" #
{ 
var 
response 
= 
context &
.& '
Response' /
;/ 0
response 
. 
ContentType $
=% &
$str' 9
;9 :
var 
responseModel !
=" #
new$ '
Response( 0
<0 1
string1 7
>7 8
(8 9
)9 :
{ 
	Succeeded 
= 
false #
,# $
Message% ,
=- .
error/ 4
?4 5
.5 6
Message6 =
}= >
;> ?
switch 
( 
error 
) 
{ 
case 
ApiException %
	exception& /
:/ 0
response    
.    !

StatusCode  ! +
=  , -
(  . /
int  / 2
)  2 3
HttpStatusCode  3 A
.  A B

BadRequest  B L
;  L M
break!! 
;!! 
case"" 
ValidationException"" ,
	exception""- 6
:""6 7
response##  
.##  !

StatusCode##! +
=##, -
(##. /
int##/ 2
)##2 3
HttpStatusCode##3 A
.##A B

BadRequest##B L
;##L M
responseModel$$ %
.$$% &
Errors$$& ,
=$$- .
	exception$$/ 8
.$$8 9
Errors$$9 ?
;$$? @
break%% 
;%% 
case&&  
KeyNotFoundException&& -
	exception&&. 7
:&&7 8
response''  
.''  !

StatusCode''! +
='', -
(''. /
int''/ 2
)''2 3
HttpStatusCode''3 A
.''A B
NotFound''B J
;''J K
break(( 
;(( 
default)) 
:)) 
response**  
.**  !

StatusCode**! +
=**, -
(**. /
int**/ 2
)**2 3
HttpStatusCode**3 A
.**A B
InternalServerError**B U
;**U V
break++ 
;++ 
},, 
var-- 
result-- 
=-- 
JsonSerializer-- +
.--+ ,
	Serialize--, 5
(--5 6
responseModel--6 C
)--C D
;--D E
await.. 
response.. 
... 

WriteAsync.. )
(..) *
result..* 0
)..0 1
;..1 2
}// 
}00 
}22 	
}33 ,
DC:\Users\Asus\source\repos\BackendProyectoPersonal\WebAPI\Program.cs
var

 
builder

 
=

 
WebApplication

 
.

 
CreateBuilder

 *
(

* +
args

+ /
)

/ 0
;

0 1
builder 
. 
Services 
. 
AddApplicationLayer $
($ %
)% &
;& '
builder 
. 
Services 
. )
AddPersistenseInfraestructure .
(. /
builder/ 6
.6 7
Configuration7 D
)D E
;E F
builder 
. 
Services 
. $
AddSharedInfraestructure )
() *
)* +
;+ ,
builder 
. 
Services 
. &
AddApiVersioningExtensions +
(+ ,
), -
;- .
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
AddCors 
( 
options  
=>! #
{ 
options 
. 
AddDefaultPolicy 
( 
builder $
=>% '
{ 
builder 
. 
WithOrigins 
( 
$str 3
)3 4
. 
AllowAnyHeader 
( 
)  
. 
AllowAnyMethod 
( 
)  
;  !
} 
) 
; 
} 
) 
; 
builder 
. 
Services 
. 
AddAuthentication "
(" #
JwtBearerDefaults# 4
.4 5 
AuthenticationScheme5 I
)I J
.J K
AddJwtBearer   
(   
options   
=>   
{!! 
options"" 
."" %
TokenValidationParameters"" )
=""* +
new"", /%
TokenValidationParameters""0 I
{## 	
ValidateIssuer$$ 
=$$ 
true$$ !
,$$! "
ValidateAudience%% 
=%% 
true%% #
,%%# $
ValidateLifetime&& 
=&& 
true&& #
,&&# $$
ValidateIssuerSigningKey'' $
=''% &
true''' +
,''+ ,
ValidIssuer(( 
=(( 
builder(( !
.((! "
Configuration((" /
[((/ 0
$str((0 <
]((< =
,((= >
ValidAudience)) 
=)) 
builder)) #
.))# $
Configuration))$ 1
[))1 2
$str))2 @
]))@ A
,))A B
IssuerSigningKey** 
=** 
new** " 
SymmetricSecurityKey**# 7
(**7 8
Encoding**8 @
.**@ A
UTF8**A E
.**E F
GetBytes**F N
(**N O
builder**O V
.**V W
Configuration**W d
[**d e
$str**e n
]**n o
)**o p
)**p q
}++ 	
;++	 

},, 
),, 
;,, 
int.. 
superAdminId.. 
=.. 
(.. 
int.. 
).. 
EnumRol.. 
...  

SuperAdmin..  *
;..* +
builder// 
.// 
Services// 
.// 
AddAuthorization// !
(//! "
options//" )
=>//* ,
{00 
options11 
.11 
	AddPolicy11 
(11 
$str11 "
,11" #
policy11$ *
=>11+ -
policy11. 4
.114 5
RequireClaim115 A
(11A B
$str11B I
,11I J
superAdminId11K W
.11W X
ToString11X `
(11` a
)11a b
)11b c
)11c d
;11d e
}22 
)22 
;22 
var33 
app33 
=33 	
builder33
 
.33 
Build33 
(33 
)33 
;33 
if99 
(99 
app99 
.99 
Environment99 
.99 
IsDevelopment99 !
(99! "
)99" #
)99# $
{:: 
app;; 
.;; 

UseSwagger;; 
(;; 
);; 
;;; 
app<< 
.<< 
UseSwaggerUI<< 
(<< 
)<< 
;<< 
}== 
app>> 
.>> 
UseCors>> 
(>> 
)>> 
;>> 
app?? 
.?? 
UseHttpsRedirection?? 
(?? 
)?? 
;?? 
app@@ 
.@@ 
UseAuthentication@@ 
(@@ 
)@@ 
;@@ 
appAA 
.AA 
UseAuthorizationAA 
(AA 
)AA 
;AA 
appBB 
.BB &
useErrorHandlingMiddlewareBB 
(BB 
)BB  
;BB  !
appCC 
.CC 
MapControllersCC 
(CC 
)CC 
;CC 
appEE 
.EE 
RunEE 
(EE 
)EE 	
;EE	 
